"""
✨ `AthleteResume_KeyOutput` returns the primary key fields of table type `AthleteResume`.

It has the same format as `AthleteResume_Key`, but is only used as mutation return value.
"""
scalar AthleteResume_KeyOutput
"""
✨ `User_KeyOutput` returns the primary key fields of table type `User`.

It has the same format as `User_Key`, but is only used as mutation return value.
"""
scalar User_KeyOutput
"""
✨ Generated data input type for table 'AthleteResume'. It includes all necessary fields for creating or upserting rows into table.
"""
input AthleteResume_Data {
  """
  ✨ Generated from Field `AthleteResume`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `AthleteResume`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `AthleteResume`.`gender` of type `String!`
  """
  gender: String
  """
  ✨ `_expr` server value variant of `gender` (✨ Generated from Field `AthleteResume`.`gender` of type `String!`)
  """
  gender_expr: String_Expr
  """
  ✨ Generated from Field `AthleteResume`.`parameters` of type `[String]!`
  """
  parameters: [String!]
  """
  ✨ Generated from Field `AthleteResume`.`sport` of type `String!`
  """
  sport: String
  """
  ✨ `_expr` server value variant of `sport` (✨ Generated from Field `AthleteResume`.`sport` of type `String!`)
  """
  sport_expr: String_Expr
  """
  ✨ Generated from Field `AthleteResume`.`updatedAt` of type `Timestamp!`
  """
  updatedAt: Timestamp
  """
  ✨ `_expr` server value variant of `updatedAt` (✨ Generated from Field `AthleteResume`.`updatedAt` of type `Timestamp!`)
  """
  updatedAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `updatedAt` (✨ Generated from Field `AthleteResume`.`updatedAt` of type `Timestamp!`)
  """
  updatedAt_time: Timestamp_Relative
  """
  ✨ Generated from Field `AthleteResume`.`userId` of type `UUID!`
  """
  userId: UUID
  """
  ✨ `_expr` server value variant of `userId` (✨ Generated from Field `AthleteResume`.`userId` of type `UUID!`)
  """
  userId_expr: UUID_Expr
}
"""
✨ Generated filter input type for table 'AthleteResume'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input AthleteResume_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [AthleteResume_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: AthleteResume_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [AthleteResume_Filter!]
  """
  ✨ Generated from Field `AthleteResume`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `AthleteResume`.`gender` of type `String!`
  """
  gender: String_Filter
  """
  ✨ Generated from Field `AthleteResume`.`parameters` of type `[String]!`
  """
  parameters: String_ListFilter
  """
  ✨ Generated from Field `AthleteResume`.`sport` of type `String!`
  """
  sport: String_Filter
  """
  ✨ Generated from Field `AthleteResume`.`updatedAt` of type `Timestamp!`
  """
  updatedAt: Timestamp_Filter
  """
  ✨ Generated from Field `AthleteResume`.`userId` of type `UUID!`
  """
  userId: UUID_Filter
}
"""
✨ Generated first-row input type for table 'AthleteResume'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input AthleteResume_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [AthleteResume_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: AthleteResume_Filter
}
"""
✨ Generated key input type for table 'AthleteResume'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input AthleteResume_Key {
  """
  ✨ Generated from Field `AthleteResume`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `AthleteResume`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'AthleteResume'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input AthleteResume_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: AthleteResume_Filter
}
"""
✨ Generated order input type for table 'AthleteResume'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input AthleteResume_Order {
  """
  ✨ Generated from Field `AthleteResume`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `AthleteResume`.`gender` of type `String!`
  """
  gender: OrderDirection
  """
  ✨ Generated from Field `AthleteResume`.`sport` of type `String!`
  """
  sport: OrderDirection
  """
  ✨ Generated from Field `AthleteResume`.`updatedAt` of type `Timestamp!`
  """
  updatedAt: OrderDirection
  """
  ✨ Generated from Field `AthleteResume`.`userId` of type `UUID!`
  """
  userId: OrderDirection
}
"""
✨ Generated data input type for table 'User'. It includes all necessary fields for creating or upserting rows into table.
"""
input User_Data {
  """
  ✨ Generated from Field `User`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `User`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `User`.`country` of type `String`
  """
  country: String
  """
  ✨ `_expr` server value variant of `country` (✨ Generated from Field `User`.`country` of type `String`)
  """
  country_expr: String_Expr
  """
  ✨ Generated from Field `User`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp
  """
  ✨ `_expr` server value variant of `createdAt` (✨ Generated from Field `User`.`createdAt` of type `Timestamp!`)
  """
  createdAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `createdAt` (✨ Generated from Field `User`.`createdAt` of type `Timestamp!`)
  """
  createdAt_time: Timestamp_Relative
  """
  ✨ Generated from Field `User`.`email` of type `String!`
  """
  email: String
  """
  ✨ `_expr` server value variant of `email` (✨ Generated from Field `User`.`email` of type `String!`)
  """
  email_expr: String_Expr
  """
  ✨ Generated from Field `User`.`firstName` of type `String!`
  """
  firstName: String
  """
  ✨ `_expr` server value variant of `firstName` (✨ Generated from Field `User`.`firstName` of type `String!`)
  """
  firstName_expr: String_Expr
  """
  ✨ Generated from Field `User`.`lastName` of type `String!`
  """
  lastName: String
  """
  ✨ `_expr` server value variant of `lastName` (✨ Generated from Field `User`.`lastName` of type `String!`)
  """
  lastName_expr: String_Expr
  """
  ✨ Generated from Field `User`.`uid` of type `UUID!`
  """
  uid: UUID
  """
  ✨ `_expr` server value variant of `uid` (✨ Generated from Field `User`.`uid` of type `UUID!`)
  """
  uid_expr: UUID_Expr
}
"""
✨ Generated filter input type for table 'User'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input User_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [User_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: User_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [User_Filter!]
  """
  ✨ Generated from Field `User`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `User`.`country` of type `String`
  """
  country: String_Filter
  """
  ✨ Generated from Field `User`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp_Filter
  """
  ✨ Generated from Field `User`.`email` of type `String!`
  """
  email: String_Filter
  """
  ✨ Generated from Field `User`.`firstName` of type `String!`
  """
  firstName: String_Filter
  """
  ✨ Generated from Field `User`.`lastName` of type `String!`
  """
  lastName: String_Filter
  """
  ✨ Generated from Field `User`.`uid` of type `UUID!`
  """
  uid: UUID_Filter
}
"""
✨ Generated first-row input type for table 'User'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input User_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [User_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: User_Filter
}
"""
✨ Generated key input type for table 'User'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input User_Key {
  """
  ✨ Generated from Field `User`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `User`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'User'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input User_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: User_Filter
}
"""
✨ Generated order input type for table 'User'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input User_Order {
  """
  ✨ Generated from Field `User`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `User`.`country` of type `String`
  """
  country: OrderDirection
  """
  ✨ Generated from Field `User`.`createdAt` of type `Timestamp!`
  """
  createdAt: OrderDirection
  """
  ✨ Generated from Field `User`.`email` of type `String!`
  """
  email: OrderDirection
  """
  ✨ Generated from Field `User`.`firstName` of type `String!`
  """
  firstName: OrderDirection
  """
  ✨ Generated from Field `User`.`lastName` of type `String!`
  """
  lastName: OrderDirection
  """
  ✨ Generated from Field `User`.`uid` of type `UUID!`
  """
  uid: OrderDirection
}
